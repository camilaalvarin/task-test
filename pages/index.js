import Head from 'next/head'
import Image from 'next/image'
// import styles from '../styles/main.module.css'
import { useState, useEffect  } from 'react'
import { useRouter } from 'next/router'
import { collection, addDoc, getDocs, doc, updateDoc, deleteDoc } from 'firebase/firestore'
import { BsFillPencilFill, BsXLg } from "react-icons/bs";
// import updateFields from './api/tasks/update'
// import deleteDocs from './api/tasks/delete'
// import list from './api/tasks/list'

import { database } from '../firebaseConfig';
// import { collection, addDoc } from 'firebase/firestore';

export default function Home() {

  let router = useRouter()
  const databaseRef = collection(database, 'camila')
  const [fireData, setFireData] = useState([]);
  const [isUpdate, setIsUpdate] = useState(false);

  useEffect(() => {
    let token = sessionStorage.getItem('Token')
    if(token){
      getData()
    }
    if(!token) {
        router.push('/register')
    }
}, [])

const addData = () => {
  if(item != '' && !tasks.includes(item)) {
    addDoc(databaseRef, {
      tasks: item
    })
    .then(() => {
      // alert('Data sent!')
      getData()
      setTasks('')
      setItem('')
    })
    } 
    
}

  const getData = async () => {
    await getDocs(databaseRef)
    .then((response) => {
      setFireData(response.docs.map((data) => {
        return {...data.data(), id: data.id}
      }))
    })
  }

  const [ID, setID] = useState(null)
  const [tasks, setTasks] = useState('')
  const [item, setItem] = useState('')

  function removeItem (taskName) {
    setTasks(tasks.filter((task) => {
      return task != taskName
      })
      .then(() => {
        alert('Data Updated')
      })
      .catch((err) => {
        console.log(err)
      })
    );
  } 



  return (
    <div className='container'>
      <Head>
        <title>To do App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div className='navTitle'>
        <p>TODO LIST</p>
      </div>
      <div className='border'>
        <h2>TODO LIST</h2>
        <div className='flex'>
          <div className='taskList'>
            {fireData.map((data) => {
              return ( <div className='liDiv'> 
                  <div className='borderDiv'><li>{data.tasks}</li></div>
                    <div>
                      <button className='xButton' onClick={() => {
                          getID(data.id, data.tasks)
                        }}>
                        <BsFillPencilFill /> 
                      </button>
                      <button className='xButton' onClick={() => {
                          deleteDocs(data.id)
                        }}>
                        <BsXLg />
                      </button>
                </div>
              </div>)
            })}
          </div>
          <div className='newTask'>
            <div>
              <input placeholder='Item Name' value={item}
                onChange={(e) => {
                  setItem(e.target.value)
                }}
              >
              </input>
            </div> 
            <div>
              <select>
                <option>Status (Pending / In progress / Done)</option>
              </select>
            </div>
            <div className='buttonsDiv'>
              {isUpdate ? (
                <button disabled='true' onClick={updateFields}>ADD</button> 
              ) :
              (  
                <button onClick={addData}>ADD</button> 
              )}
              <br />
              {isUpdate ? (
                <button className='modifyButton' onClick={updateFields}>MODIFY</button> 
              ) :
              (  
                <button className='modifyButton' disabled='true' onClick={updateFields}>MODIFY</button> 
              )}
            </div>
          </div>
        </div>
      </div>
   
    </div>

  )
}
